library(janitor)
census_data <- load_variables(year = 2022,
dataset = "acs1",
cache = TRUE) %>%
clean_names() %>%
rename_all(~ gsub("!", " ", .))
census_data <- load_variables(year = 2022,
dataset = "acs1",
cache = TRUE) %>%
rename_all(~ gsub("!", " ", .))
library(dplyr)
library(janitor)
library(stringr)
census_data <- load_variables(year = 2022,
dataset = "acs1",
cache = TRUE) %>%
clean_names() %>%
mutate_all(~ str_replace_all(as.character(.), "!", " "))
library(dplyr)
library(janitor)
library(stringr)
census_data <- load_variables(year = 2022,
dataset = "acs1",
cache = TRUE) %>%
clean_names() %>%
mutate_all(~ str_replace_all(as.character(.), "!", " ")) %>%
mutate_all(across(everything(), as.character))
library(dplyr)
library(janitor)
library(stringr)
library(purrr)
census_data <- load_variables(year = 2022,
dataset = "acs1",
cache = TRUE) %>%
clean_names() %>%
mutate_all(~ map_chr(.x, ~str_replace_all(as.character(.), "!", " ")))
census_data <- load_variables(year = 2022,
dataset = "acs1",
cache = TRUE) %>%
clean_names() %>%
census_data <- load_variables(year = 2022,
dataset = "acs1",
cache = TRUE) %>%
clean_names()
library(dplyr)
library(janitor)
# List of years
years <- 2012:2022
# Load and clean data for each year
census_data_list <- lapply(years, function(year) {
load_variables(year = year, dataset = "acs1", cache = TRUE) %>%
clean_names()
})
library(dplyr)
library(janitor)
# List of years
years <- 2012:2019, 2021:2022
library(dplyr)
library(janitor)
# List of years
years <- c(2012:2019, 2021:2022)
# Load and clean data for each year
census_data_list <- lapply(years, function(year) {
load_variables(year = year, dataset = "acs1", cache = TRUE) %>%
clean_names()
})
# Combine the results into a single data frame
census_data <- bind_rows(census_data_list, .id = "year")
View(census_data)
median_22 <- filter(census_data, str_detect(name, "S1903"))
View(median_22)
#create a pivot table displaying the median household income in each location for 2022
med_summary <- medians_2012_2022 %>%
filter(year %in% c("2022"))
View(med_summary)
#Findings for 2022 median household income:
#Baltimore City: $55,198
#Baltimore County: $86,526
#Maryland: $94,991
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)%>%
mutate(Percent = ((55198 - 39241)/39241))%>%
mutate(pct_change_baltcounty = ((86526 - 62444)/62444))
# Assuming df is your dataframe and new_row is the data for the new row
new_row <- med_summary(
column1 = "year",
column2 = "balt_county",
column3 = "baltcity")
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)%>%
mutate(Percent = ((55198 - 39241)/39241))%>%
mutate(pct_change_baltcounty = ((86526 - 62444)/62444))
#rsw - add this calculation to the table using mutate
#Find percent change for Baltimore City between 2012 and 2022
percent((55198 - 39241)/39241)
#rsw - add this calculation to the table using mutate
#Find percent change for Baltimore County between 2012 and 2022
percent((86526 - 62444)/62444)
#Percent change
View(median_2012_2022)
View(medians_2012_2022)
View(poverty_status_2)
View(poverty_race)
#Next add a row with percent change
percent_change <- decade_values_clean %>%
group_by(Location) %>%
summarize(percent_change = (Estimate[year == "2022"] - Estimate[year == "2012"]) / Estimate[year == "2012"] * 100)
new_row <- data.frame(year = "Percent Change",
Location = "Overall",  # Adjust as needed
Estimate = mean(percent_change$percent_change, na.rm = TRUE))
decade_values_clean <- rbind(decade_values_clean, new_row)
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)%>%
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)
#Next add a row with percent change
percent_change <- decade_values_clean %>%
group_by(Location) %>%
summarize(percent_change = (Estimate[year == "2022"] - Estimate[year == "2012"]) / Estimate[year == "2012"] * 100)
new_row <- data.frame(year = "Percent Change",
Location = "Overall",  # Adjust as needed
Estimate = mean(percent_change$percent_change, na.rm = TRUE))
decade_values_clean <- rbind(decade_values_clean, new_row)
View(decade_values_clean)
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)
View(decade_values)
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022", "2012"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)
View(decade_values)
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022", "2012"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)
#Next add a row with percent change
percent_change <- decade_values_clean %>%
group_by(Location) %>%
summarize(percent_change = (Estimate[year == "2022"] - Estimate[year == "2012"]) / Estimate[year == "2012"] * 100)
decade_values_clean <- bind_rows(
decade_values_clean,
percent_change %>%
mutate(year = "pct_change", Estimate = percent_change) %>%
select(year, Location, Estimate)
)
library(dplyr)
library(tidyr)
# Assuming your data frame is named medians_2012_2022
decade_values_clean <- medians_2012_2022 %>%
filter(year %in% c("2012", "2022")) %>%
gather(key = "Location", value = "Estimate", -1)
# Calculate percent change for each location
percent_change <- decade_values_clean %>%
group_by(Location) %>%
summarize(percent_change = (Estimate[year == "2022"] - Estimate[year == "2012"]) / Estimate[year == "2012"] * 100) %>%
mutate(year = "pct_change")
# Add the row with percent change for each location
decade_values_clean <- bind_rows(decade_values_clean, percent_change)
library(dplyr)
library(tidyr)
# Assuming your data frame is named medians_2012_2022
decade_values_clean <- medians_2012_2022 %>%
filter(year %in% c("2012", "2022")) %>%
gather(key = "Location", value = "Estimate", -1)
# Calculate percent change for each location
percent_change <- decade_values_clean %>%
group_by(Location) %>%
summarize(percent_change = (Estimate[year == "2022"] - Estimate[year == "2012"]) / Estimate[year == "2012"] * 100) %>%
mutate(year = "pct_change")
# Convert the year column in decade_values_clean to character
decade_values_clean$year <- as.character(decade_values_clean$year)
# Add the row with percent change for each location
decade_values_clean <- bind_rows(decade_values_clean, percent_change)
View(decade_values_clean)
ggplot(medians_2012_2022, aes(x=year)) +
geom_line(aes(y=balt_city), color = "blue", show.legend = TRUE) +
geom_line(aes(y=balt_county), color = "green")+
geom_line(aes(y=maryland), color = "red")+
labs(title = "Median Household Income from 2012-2022",
caption = "Source: U.S. Census Bureau. Graph by Olivia Borgula, 3/12/24",
y="Income",
x="Year")
View(poverty_race)
View(poverty_race)
poverty_pct <- poverty_status_2 %>%
select(label_grouping, maryland_percent_below_poverty_level_estimate, baltimore_city_maryland_percent_below_poverty_level_estimate, baltimore_county_maryland_percent_below_poverty_level_estimate)%>%
filter(label_grouping %in% c("Population for whom poverty status is determined"))
View(poverty_pct)
#add column for percent
poverty_status_2 <- poverty_status_2%>%
select(label_grouping, maryland_total_estimate, maryland_below_poverty_level_estimate, baltimore_county_maryland_total_estimate, baltimore_county_maryland_below_poverty_level_estimate, baltimore_city_maryland_total_estimate, baltimore_city_maryland_below_poverty_level_estimate)%>%
mutate(md_pct = maryland_below_poverty_level_estimate/maryland_total_estimate)%>%
mutate(baltcounty_pct = baltimore_county_maryland_below_poverty_level_estimate/baltimore_county_maryland_total_estimate)%>%
mutate(baltcity_pct = baltimore_city_maryland_below_poverty_level_estimate/baltimore_city_maryland_total_estimate)
# Reshape the data
reshaped_pct <- gather(poverty_pct, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "maryland_percent_below_poverty_level_estimate" ~ "Maryland",
Location == "baltimore_city_maryland_percent_below_poverty_level_estimate" ~ "Baltimore City",
Location == "baltimore_county_maryland_percent_below_poverty_level_estimate" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
poverty_race[is.na(poverty_race)] <- 0
poverty_race <- poverty_race %>%
mutate(pct_md = percent(md_poverty/md_total))%>%
mutate(pct_baltcounty = percent(baltcounty_poverty/baltcounty_total))%>%
mutate(pct_baltcity = percent(baltcity_poverty/baltcounty_total))
glimpse(poverty_race)
glimpse(poverty_status_2)
poverty_status <- poverty_status_2 %>%
mutate(below_poverty = str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%",""))
View(poverty_status_2)
View(poverty_status)
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%",""))
glimpse(poverty_status)
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
glimpse(poverty_status)
#First make a pivot table to more easily identify values
decade_values <- medians_2012_2022 %>%
filter(year %in% c("2022", "2012"))
decade_values_clean <- gather(decade_values, key = "Location", value = "Estimate", -1)
View(decade_values)
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_pct <- poverty_status_2 %>%
select(label_grouping, maryland_percent_below_poverty_level_estimate, baltimore_city_maryland_percent_below_poverty_level_estimate, baltimore_county_maryland_percent_below_poverty_level_estimate)%>%
filter(label_grouping %in% c("Population for whom poverty status is determined"))
# Reshape the data
reshaped_pct <- gather(poverty_pct, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "maryland_percent_below_poverty_level_estimate" ~ "Maryland",
Location == "baltimore_city_maryland_percent_below_poverty_level_estimate" ~ "Baltimore City",
Location == "baltimore_county_maryland_percent_below_poverty_level_estimate" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
poverty_race[is.na(poverty_race)] <- 0
poverty_pct <- poverty_status %>%
select(label_grouping, maryland_percent_below_poverty_level_estimate, baltimore_city_maryland_percent_below_poverty_level_estimate, baltimore_county_maryland_percent_below_poverty_level_estimate)%>%
filter(label_grouping %in% c("Population for whom poverty status is determined"))
# Reshape the data
reshaped_pct <- gather(poverty_pct, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "maryland_percent_below_poverty_level_estimate" ~ "Maryland",
Location == "baltimore_city_maryland_percent_below_poverty_level_estimate" ~ "Baltimore City",
Location == "baltimore_county_maryland_percent_below_poverty_level_estimate" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
View(poverty_pct)
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
# Reshape the data
reshaped_pct <- gather(poverty_pct, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "maryland_percent_below_poverty_level_estimate" ~ "Maryland",
Location == "baltimore_city_maryland_percent_below_poverty_level_estimate" ~ "Baltimore City",
Location == "baltimore_county_maryland_percent_below_poverty_level_estimate" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
# Reshape the data
reshaped_pct <- gather(poverty_status, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "maryland_percent_below_poverty_level_estimate" ~ "Maryland",
Location == "baltimore_city_maryland_percent_below_poverty_level_estimate" ~ "Baltimore City",
Location == "baltimore_county_maryland_percent_below_poverty_level_estimate" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
poverty_status <- poverty_status_2 %>%
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_city_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate,"%","")))
poverty_pct <- poverty_status %>%
select(label_grouping, maryland_percent_below_poverty_level_estimate, baltimore_city_maryland_percent_below_poverty_level_estimate, baltimore_county_maryland_percent_below_poverty_level_estimate)%>%
filter(label_grouping %in% c("Population for whom poverty status is determined"))
# Reshape the data
reshaped_pct <- gather(poverty_pct, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "maryland_percent_below_poverty_level_estimate" ~ "Maryland",
Location == "baltimore_city_maryland_percent_below_poverty_level_estimate" ~ "Baltimore City",
Location == "baltimore_county_maryland_percent_below_poverty_level_estimate" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
poverty_pct <- poverty_status %>%
select(label_grouping, md_pct_below_poverty, bco_pct_below_poverty, bcity_pct_below_poverty)%>%
filter(label_grouping %in% c("Population for whom poverty status is determined"))
poverty_status <- poverty_status_2 %>%
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_city_maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_city_maryland_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))%>%
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_city_maryland_below_poverty_level_estimate,"%","")))%>%
mutate(md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate,"%","")))
glimpse(poverty_status_2)
poverty_status <- poverty_status_2 %>%
mutate(bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate,"%","")))%>%
mutate(bcity_pct_below_poverty = as.numeric(str_replace(baltimore_city_maryland_percent_below_poverty_level_estimate,"%","")))%>%
mutate(md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate,"%","")))
poverty_status <- poverty_status_2 %>%
mutate(
bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate, "%", "")),
bcity_pct_below_poverty = as.numeric(str_replace(baltimore_city_maryland_percent_below_poverty_level_estimate, "%", "")),
md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate, "%", ""))
)
poverty_pct <- poverty_status %>%
select(label_grouping, md_pct_below_poverty, bco_pct_below_poverty, bcity_pct_below_poverty)%>%
filter(label_grouping %in% c("Population for whom poverty status is determined"))
# Reshape the data
reshaped_pct <- gather(poverty_pct, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "maryland_percent_below_poverty_level_estimate" ~ "Maryland",
Location == "baltimore_city_maryland_percent_below_poverty_level_estimate" ~ "Baltimore City",
Location == "baltimore_county_maryland_percent_below_poverty_level_estimate" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
View(poverty_pct)
View(reshaped_pct)
poverty_status <- poverty_status_2 %>%
mutate(
bco_pct_below_poverty = as.numeric(str_replace(baltimore_county_maryland_percent_below_poverty_level_estimate, "%", "")),
bcity_pct_below_poverty = as.numeric(str_replace(baltimore_city_maryland_percent_below_poverty_level_estimate, "%", "")),
md_pct_below_poverty = as.numeric(str_replace(maryland_percent_below_poverty_level_estimate, "%", ""))
)
poverty_pct <- poverty_status %>%
select(label_grouping, md_pct_below_poverty, bco_pct_below_poverty, bcity_pct_below_poverty)%>%
filter(label_grouping %in% c("Population for whom poverty status is determined"))
View(poverty_pct)
# Reshape the data
reshaped_pct <- gather(poverty_pct, key = "Location", value = "Percent", -1)
reshaped_pct <- reshaped_pct[, -1]
reshaped_pct <- reshaped_pct %>%
mutate(
new_names = case_when(
Location == "md_pct_below_poverty" ~ "Maryland",
Location == "bcity_pct_below_poverty" ~ "Baltimore City",
Location == "bco_pct_below_poverty" ~ "Baltimore County"
)
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent, fill="darkblue")) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent, fill="#00008B")) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau"
)
reshaped_pct %>%
ggplot() +
geom_col(aes(x = new_names, y = Percent)) +
theme_minimal() +
labs(
title = "Percent of Population Below Poverty Line in Baltimore City, Baltimore County, and Maryland",
x = "Location",
y = "Percent",
caption = "Source: U.S. Census Bureau. Graph by Olivia Borgula, 3/12/24"
)
