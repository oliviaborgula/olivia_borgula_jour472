---
title: "data_analysis_4-29"
author: Olivia Borgula
date: 4/30/2024
format: html
editor: visual
---
**INTRODUCTION** This data analysis project will examine how incarceration, wealth and race intersect and play a role in voter registration in Baltimore City â€” an especially newsworthy topic ahead of elections season this November. Specifically, I will ask these five questions to guide my findings:

1. Which community in Baltimore had the least amount of registered voters in August 2020? Which had the most? 

2. What was the rate of incarceration in the top 10 areas with the lowest voter turnout? What about in the top 10 areas with the highest voter turnout?

3. How many people registered to vote in the August 2020 in the top 10 areas in Baltimore City with the highest median household income? What about in the 10 lowest areas? 

4. Which race in Baltimore had the least amount of registered voters in August 2020 as a share of their voting precinct population numbers? 

5. How has voter registration data changed in the past four years?

**THE DATA**
The core datasets I will use (not including new datasets I create through joins) include: 

1. demo_voting_x2020 - voter demographic information by voting precinct in 2020 in Baltimore City via the Maryland Department of Planning. Contains the number of people in each precinct by race.  https://planning.maryland.gov/Redistricting/Documents/2020data/GreenReport.pdf

2. incarceration_x2020 - a data table scraped from a Prison Policy Initiative website with information about the incarceration rate in different Baltimore zip codes in 2020. https://www.prisonpolicy.org/origin/md/2020/zipcode.html

3. x2020_precinct_voters - voter registration counts in 2020 by voting precinct in Baltimore City via the city's voting information page. 

4. precinct_addresses_x2020 - table with information about precinct numbers, zip codes and addresses. I imputting this website from 2024 into the wayback machine to get 2020 datasets. https://boe.baltimorecity.gov/boe-polling-locations 

5. zip_csa - table with Baltimore City's community statistical areas, or CSAs and zip codes. https://bniajfi.org/mapping-resources/

6. baltcity_income - data given in labs about median household income in Baltimore City CSAs from different years, including 2020. 

7. x20204_precinct_voters - voter registration counts in 2024 by voting precinct in Baltimore City via the city's voting information page.
https://boe.baltimorecity.gov/registration-figures

I use every core dataset for almost every question. Namely, I made a large dataset by joining demo_voting_x2020, x2020_precinct_voters, precinct_addresses_x2020 and zip_csa. Each dataset has a uniquely important element I could only find in that particular dataset. 

x2020_precinct_voters has information about voter registration by precinct in August 2020. Demo_voting_x2020 has information about precinct population in 2020, which is necessary to find voter registration as a proportion of the population, among other figures about precinct demographics. Precinct_addresses_x2020 lists 2020 voting precincts by zip code and other address information, which I joined with zip_csa to link precincts to CSAs. 

This is especially important because other data I have about incarceration and median household income is listed by CSA. It's also important to contexualize voting precincts, which no one really knows off the top of their head, with community statistical areas, which are defined as clusters of neighborhoods and are organized around Census tract boundaries, which are consistent statistical boundaries. 

**SET UP**
```{r}
#libraries and settings
library(tidyverse)
library(janitor)
library(formattable)
library(dplyr)
library(rvest)

#turn off scientific notation
options(scipen=999)
```

To start, I need to upload my core datasets and scrape the incarceration page.

demo_voting_x2020
```{r}
#voting by demographic 2020
demo_voting_x2020 <- read_csv("data/demo_voting_x2020.csv", locale=locale(encoding="latin1"))%>%
  clean_names
#delete top seven rows for worcester copied from the page before and column three filled with only N/As
demo_voting_x2020 <- demo_voting_x2020[-c(1:7), -3]%>%
  slice(-1)
```

incarceration_x2020
```{r}
#webscrape data table from prison policy initiative website 
incarceration_x2020 <- "https://www.prisonpolicy.org/origin/md/2020/zipcode.html"
incarceration_x2020 <- incarceration_x2020 %>% 
  read_html() %>% 
  html_table()

incarceration_x2020 <- incarceration_x2020[[1]]%>%
  clean_names()%>%
  rename(zip = 1, city = 2, num_prison = 3, census_pop = 4, total_pop = 5, rate_per_x100000 = 6)

#filter so the city is only Baltimore
incarceration_x2020 <- incarceration_x2020 %>%
  filter(city == "Baltimore")
```

x2020_precinct_voters
```{r}
#voting data by voting precinct in baltimore city in August 2020 
x2020_precinct_voters <- read_csv("data/cleaned_precinct_x2020.csv")
#remove blank rows
x2020_precinct_voters <- x2020_precinct_voters[complete.cases(x2020_precinct_voters), ]

x2020_precinct_voters <- x2020_precinct_voters[-111, ]
```

x2020_precinct_addresses
```{r}
#table with information about precinct numbers, zip codes and addresses
precinct_addresses_x2020 <- read_csv("data/zip_precinct_x2020_cleaned.csv")%>%
  clean_names()
precinct_addresses_x2020
```

zip_csa
note: this data came from 2010, but CSA in Baltimore only changed once between 2010 and 2020, and none of the geographical boundaries were affected, meaning only two names were changed, which I will fix. 
```{r}
#table with information about zip code and csa
zip_csa <- read_csv("data/csa_zip.csv")%>%
  clean_names()

#get rid of columns with NA
zip_csa <- zip_csa%>%
  select(where(~!any(is.na(.))))%>%
  rename(zip = zip2010)
```

x2024_precinct_voters
```{r}
#voting data by voting precinct in baltimore city in 2024 
x2024_precinct_voters <- read_csv("data/tabula-2024-precinct-voter-counts.csv")
#remove blank rows
x2024_precinct_voters <- x2024_precinct_voters[complete.cases(x2024_precinct_voters), ]
```

baltcity_income
```{r}
#income in baltimore city
baltcity_income <- read_csv("data/baltcity_income.csv")%>%
  clean_names()
```

**Q1: In the top 10 areas with the highest incarceration rates, what percent of their population registered to vote in August 2020? What about in the 10 areas with the lowest incarceration rate?**

Part 1: in the top 10 areas with the highest incarceration rates, what percent of their population registered to vote in August 2020?

I'll start by cleaning data to make it easier to join. I'm making a new table instead of just deleting columns for x2020_precinct_voters and demo_voting_x2020 because I want to use the other data later
```{r}
#remove unnecessary columns and rename to common "precinct" 
precinct_addresses_x2020 <- precinct_addresses_x2020%>%
  select(zip, ward_and_precincts)%>%
  rename(precinct = ward_and_precincts)

#remove unnecessary columns and rename total column to total_votes for clarity
nopolitic_precinct_voters <- x2020_precinct_voters %>%
  select(precinct, total) %>%
  rename(total_votes = total)

#remove unnecessary columns and rename column to common name "precinct"
norace_demo_voting <- demo_voting_x2020%>%
  select(voting_district_vtd, total_population)%>%
  rename(precinct = voting_district_vtd)
```

Now let's first join precinct_addresses_x2020, nopolitic_precinct_voters and norace_demo_voting by precinct. I'll then join that table with zip_csa by zip code. 
```{r}
#make table with zip, precinct, total_votes and total population
precinct_zip_pct <- inner_join(precinct_addresses_x2020, nopolitic_precinct_voters, by = "precinct") %>%
          inner_join(norace_demo_voting, by = "precinct")

#join precinct_zip_pct with incarceration_x2020
csa_precinct_zip_pct <- inner_join(precinct_zip_pct, incarceration_x2020, by = "zip")%>%
  inner_join(zip_csa, by = "zip")%>%
  select(zip, precinct, total_votes, total_population, rate_per_x100000, csa2010)
```

Let's finally answer the first part of this question. I'll first join csa_precinct_zip_pct with incarceration dataset.

```{r}
location_voting_incarceration <- location_voting_incarceration %>% 
  mutate(pct_registered = percent(total_votes / total_population))

bottom_10_voting_incarceration <- location_voting_incarceration%>%
  slice_min(rate_per_x100000, n = 10)

top_10_voting_incarceration <- location_voting_incarceration%>%
  slice_max(rate_per_x100000, n = 10)
```

**Q4: Which race in Baltimore had the least amount of registered voters in August 2020 as a share of their voting precinct population numbers?**

```{r}
#rename column to same as voter registration table
demo_voting_x2020 <- demo_voting_x2020%>%
  rename(precinct = voting_district_vtd)

#join demographic table and voter registration table
demo_registration <- inner_join(demo_voting_x2020, precinct_addresses_x2020, by = "precinct")

demo_registration <- demo_registration%>%
  select(precinct, total_population, adjusted_white_alone, black_or_african_american_alone, american_indian_and_alaska_native_alone, asian_alone_e, native_hawiian_other_pacific_islander_alone, adjusted_some_other_race_alone_e, adjusted_two_or_more_races, adjusted_hispanic_or_latino_of_any_race, zip)

```

